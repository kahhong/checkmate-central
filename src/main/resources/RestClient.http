// Workflow of the Demonstration
// 1. Registering 8 Players 
// 2. Create Tournament 
// 3. Add 8 Players into Tournament 
// 4. Start Tournament
//    a. Matches Automatically Created
//    b. Update Match Outcome
// 6. Next Round 2 (last)
//    a. Above Repeated
// 7. Tournament Ended

// Player Register 
// Each Player created with default ELO value
// ELO used to restrict players from Tournaments
// Also used to match lowest ELO with Highest Elo
### Create Admin
POST https://localhost:8080/api/auth/register/admin
Content-Type: application/json

{
  "name": "admin_one",
  "email": "admin1@example.com",
  "password": "password123"
}

### Login Admin
POST https://localhost:8080/api/auth/login
Content-Type: application/json

{
  "email": "admin1@example.com",
  "password": "password123"
}

### Create Admin 2
POST https://localhost:8080/api/auth/register/admin
Content-Type: application/json

{
  "name": "admin_two",
  "email": "admin2@example.com",
  "password": "password123"
}

### Login Admin 2
POST https://localhost:8080/api/auth/login
Content-Type: application/json

{
  "email": "admin2@example.com",
  "password": "password123"
}

### Create Player 1
POST https://localhost:8080/api/auth/register/player
Content-Type: application/json

{
    "name": "john_doe",
	"email": "john@example.com",
    "password": "password123"
}

### Create Player 2
POST https://localhost:8080/api/auth/register/player
Content-Type: application/json

{
    "name": "john_doe2",
	"email": "john2@example.com",
    "password": "password123"
}

### Create Playe 3
POST https://localhost:8080/api/auth/register/player
Content-Type: application/json

{
    "name": "john_doe3",
	"email": "john3@example.com",
    "password": "password123"
}

### Create Player 4
POST https://localhost:8080/api/auth/register/player
Content-Type: application/json

{
    "name": "john_doe4",
	"email": "john4@example.com",
    "password": "password123"
}

### Get Player 1's availability
GET https://localhost:8080/api/player/1/availability
Content-Type: application/json

{
    
}

### Set Player 1's availability to True
PUT https://localhost:8080/api/player/1/availability
Content-Type: application/json

{
    "availability": "True"
}

### Set Player 2's availability to True
PUT https://localhost:8080/api/player/2/availability
Content-Type: application/json

{
    "availability": "True"
}

### Set Player 3's availability to True
PUT https://localhost:8080/api/player/3/availability
Content-Type: application/json

{
    "availability": "True"
}
### Set Player 4's availability to True
PUT https://localhost:8080/api/player/4/availability
Content-Type: application/json

{
    "availability": "True"
}


###
// Create Tournament
// 
POST https://localhost:8080/api/tournaments/
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJJTEEiLCJzdWIiOiJhZG1pbjFAZXhhbXBsZS5jb20iLCJpYXQiOjE3MzIwMTg5NzksImV4cCI6MTczMjA2MjE3OX0.1yeR7n_PICzx1z55pJv6Zic8ndIp74w8aYxqri_XNbc

{
    "name": "Test_Tourney",
    "description": "My first ever Tournament for 4 players",
    "maxPlayers": "4",
    "minElo": "100",
    "type": "SINGLE_KNOCKOUT",
    "startDate": "2024-12-13T05:09:10Z",
    "endDate": "2024-12-26T05:09:10Z"
}
###

// Add Player 1 to Tournament using email
PUT https://localhost:8080/api/tournaments/1/add
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJJTEEiLCJzdWIiOiJhZG1pbjFAZXhhbXBsZS5jb20iLCJpYXQiOjE3MzIwMTkwNTksImV4cCI6MTczMjA2MjI1OX0.FYRi_IyJZpBVwcl13opApiyN7qURT17F3RR0DPjk8p8

{
    "email": "john@example.com"
}

### Add Player 2 to Tournament using email
PUT https://localhost:8080/api/tournaments/1/add
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJJTEEiLCJzdWIiOiJhZG1pbjFAZXhhbXBsZS5jb20iLCJpYXQiOjE3MzIwMTkwNTksImV4cCI6MTczMjA2MjI1OX0.FYRi_IyJZpBVwcl13opApiyN7qURT17F3RR0DPjk8p8

{
  "email": "john1@example.com"
}

### Add Player 3 to Tournament using email
PUT https://localhost:8080/api/tournaments/1/add
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJJTEEiLCJzdWIiOiJhZG1pbjFAZXhhbXBsZS5jb20iLCJpYXQiOjE3MzIwMTkwNTksImV4cCI6MTczMjA2MjI1OX0.FYRi_IyJZpBVwcl13opApiyN7qURT17F3RR0DPjk8p8

{
  "email": "john2@example.com"
}
### Add Player 4 to Tournament using email
PUT https://localhost:8080/api/tournaments/1/add
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJJTEEiLCJzdWIiOiJhZG1pbjFAZXhhbXBsZS5jb20iLCJpYXQiOjE3MzIwMTkwNTksImV4cCI6MTczMjA2MjI1OX0.FYRi_IyJZpBVwcl13opApiyN7qURT17F3RR0DPjk8p8

{
  "email": "john3@example.com"
}

###
// Start Tournament
// 
PUT https://localhost:8080/api/tournaments/1/start
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJJTEEiLCJzdWIiOiJhZG1pbjFAZXhhbXBsZS5jb20iLCJpYXQiOjE3MzIwMTkwNTksImV4cCI6MTczMjA2MjI1OX0.FYRi_IyJZpBVwcl13opApiyN7qURT17F3RR0DPjk8p8
Content-Type: application/json

{

}
###
// Get singular match
###
GET https://localhost:8080/api/match/1
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJJTEEiLCJzdWIiOiJhZG1pbjFAZXhhbXBsZS5jb20iLCJpYXQiOjE3MzIwMTkwNTksImV4cCI6MTczMjA2MjI1OX0.FYRi_IyJZpBVwcl13opApiyN7qURT17F3RR0DPjk8p8
Content-Type: application/json

{
    
}
###

// update match 1,2 outcome
PUT https://localhost:8080/api/match/1/update
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJJTEEiLCJzdWIiOiJhZG1pbjFAZXhhbXBsZS5jb20iLCJpYXQiOjE3MzIwMTkwNTksImV4cCI6MTczMjA2MjI1OX0.FYRi_IyJZpBVwcl13opApiyN7qURT17F3RR0DPjk8p8
Content-Type: application/json

{
    "outcome" : "WIN"
}

###
PUT https://localhost:8080/api/match/2/update
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJJTEEiLCJzdWIiOiJhZG1pbjFAZXhhbXBsZS5jb20iLCJpYXQiOjE3MzIwMTkwNTksImV4cCI6MTczMjA2MjI1OX0.FYRi_IyJZpBVwcl13opApiyN7qURT17F3RR0DPjk8p8
Content-Type: application/json

{
"outcome" : "LOSE"
}

###

// move to round 2
PUT https://localhost:8080/api/tournaments/1/nextround
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJJTEEiLCJzdWIiOiJhZG1pbjFAZXhhbXBsZS5jb20iLCJpYXQiOjE3MzIwMTkwNTksImV4cCI6MTczMjA2MjI1OX0.FYRi_IyJZpBVwcl13opApiyN7qURT17F3RR0DPjk8p8
Content-Type: application/json

{

}
###
// update match 3 (Final Match)
PUT https://localhost:8080/api/match/3/update
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJJTEEiLCJzdWIiOiJhZG1pbjFAZXhhbXBsZS5jb20iLCJpYXQiOjE3MzIwMTkwNTksImV4cCI6MTczMjA2MjI1OX0.FYRi_IyJZpBVwcl13opApiyN7qURT17F3RR0DPjk8p8
Content-Type: application/json

{
  "outcome" : "LOSE"
}

###


###
// End Tournament
PUT https://localhost:8080/api/tournaments/1/nextround
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJJTEEiLCJzdWIiOiJhZG1pbjFAZXhhbXBsZS5jb20iLCJpYXQiOjE3MzIwMTkwNTksImV4cCI6MTczMjA2MjI1OX0.FYRi_IyJZpBVwcl13opApiyN7qURT17F3RR0DPjk8p8
Content-Type: application/json

{

}