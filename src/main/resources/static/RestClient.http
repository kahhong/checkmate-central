// Workflow of the Demonstration
// 1. Registering 8 Players 
// 2. Create Tournament 
// 3. Add 8 Players into Tournament 
// 4. Start Tournament
//    a. Matches Automatically Created
//    b. Update Match Outcome
// 6. Next Round 2 (last)
//    a. Above Repeated
// 7. Tournament Ended

// Player Register 
// Each Player created with default ELO value
// ELO used to restrict players from Tournaments
// Also used to match lowest ELO with Highest Elo
### Create Admin
POST http://localhost:8080/auth/register
Content-Type: application/json

{
  "name": "admin_one",
  "email": "admin1@example.com",
  "password": "password123",
  "grantedAuthorityString": "ROLE_ADMIN"
}

### Create Players
POST http://localhost:8080/auth/register
Content-Type: application/json

{
    "name": "john_doe",
	"email": "john@example.com",
    "password": "password123",
    "grantedAuthorityString": "ROLE_USER"
}

###
POST http://localhost:8080/auth/register
Content-Type: application/json

{
    "name": "john_doe2",
	"email": "john2@example.com",
    "password": "password123",
  "grantedAuthorityString": "ROLE_USER"
}

###
POST http://localhost:8080/auth/register
Content-Type: application/json

{
    "name": "john_doe3",
	"email": "john3@example.com",
    "password": "password123",
  "grantedAuthorityString": "ROLE_USER"
}

###
POST http://localhost:8080/auth/register
Content-Type: application/json

{
    "name": "john_doe4",
	"email": "john4@example.com",
    "password": "password123",
  "grantedAuthorityString": "ROLE_USER"
}

###
// Create Tournament
// 
POST http://localhost:8080/tournaments/
Content-Type: application/json
Authorization: Basic admin1@example.com password123

{
    "name": "Test_Tourney",
    "description": "My first ever Tournament for 4 players",
    "maxPlayers": "4",
    "minElo": "100",
    "type": "SINGLE_KNOCKOUT",
    "startDate": "2024-10-22T05:09:10Z",
    "endDate": "2024-11-13T05:09:10Z"
}
###

// Add player to Tournament using email
PUT http://localhost:8080/tournaments/1/add
Content-Type: application/json
Authorization: Basic admin1@example.com password123

{
    "email": "john@example.com"
}

###
PUT http://localhost:8080/tournaments/1/add
Content-Type: application/json
Authorization: Basic admin1@example.com password123

{
  "email": "john2@example.com"
}

###
PUT http://localhost:8080/tournaments/1/add
Content-Type: application/json
Authorization: Basic admin1@example.com password123

{
  "email": "john3@example.com"
}
###
PUT http://localhost:8080/tournaments/1/add
Authorization: Basic admin1@example.com password123
Content-Type: application/json

{
  "email": "john4@example.com"
}

###
// Start Tournament
// 
PUT http://localhost:8080/tournaments/1/start
Authorization: Basic admin1@example.com password123
Content-Type: application/json

{

}

// Get singular match
###
GET http://localhost:8080/match/1
Authorization: Basic admin1@example.com password123
Content-Type: application/json

{
    
}
###

// update match 1,2 outcome
PUT http://localhost:8080/match/1/update
Authorization: Basic admin1@example.com password123
Content-Type: application/json

{
    "outcome" : "1.0"
}

###
PUT http://localhost:8080/match/2/update
Authorization: Basic admin1@example.com password123
Content-Type: application/json

{
"outcome" : "0.0"
}

###

// move to round 2
PUT http://localhost:8080/tournaments/1/nextround
Authorization: Basic admin1@example.com password123
Content-Type: application/json

{

}
###
// update match 3 (Final Match)
PUT http://localhost:8080/match/3/update
Authorization: Basic admin1@example.com password123
Content-Type: application/json

{
  "outcome" : "0"
}

###


###
// End Tournament
PUT http://localhost:8080/tournaments/1/nextround
Authorization: Basic admin1@example.com password123
Content-Type: application/json

{

}